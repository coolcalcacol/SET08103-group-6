name: CI Build
on:
  push:
    branches:
      - develop
      - main
      - release

jobs:
  extract-branch:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: extract_branch

  check-folders:
    runs-on: ubuntu-latest
    outputs:
      run_build_job: ${{ steps.check.outputs.run_build_job }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: check if files have been updated
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD
          
          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file == src/main/* ]]; then
              echo "This modified file is in the 'src/main/' folder."
              echo "run_build_job=true" >> $GITHUB_OUTPUT
            elif [[ $file == src/test/* ]]; then
              echo "This modified file is in the 'src/test/' folder."
              echo "run_build_job=true" >> $GITHUB_OUTPUT
            else
              echo "This modified file not associated with any of the packages."
            fi
          done < files.txt
        id: check

  unit-test:
    runs-on: ubuntu-latest
    needs:
      - check-folders
    if: ${{ needs.check-folders.outputs.run_build_job == 'true' }}
    steps:
      -   name: Check out the repo
          uses: actions/checkout@v3

      -   name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'adopt'

      -   name: Unit Tests
          run: mvn -Dtest=com.napier.sem.AppUnitTest test

      -   name: Upload results to CodeCov
          uses: codecov/codecov-action@v3
          with:
            directory: ./target/site/jacoco
            flags: Unit_Tests
            verbose: true

  integration-test:
    runs-on: ubuntu-latest
    needs:
      - check-folders
    if: ${{ needs.check-folders.outputs.run_build_job == 'true' }}
    steps:
      -   name: Check out the repo
          uses: actions/checkout@v3

      -   name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'adopt'

      -   name: Integration Tests
          run: |
            # Build and start the database container
            docker-compose up -d db
            
            # Run the integration tests
            mvn -Dtest=com.napier.sem.AppIntegrationTest test          
            
            # Stop and remove the database container, and auto-created network
            docker-compose down
            # Remove all unused and dangling images
            docker image prune -f

      -   name: Upload results to CodeCov
          uses: codecov/codecov-action@v3
          with:
            directory: ./target/site/jacoco
            flags: Integration_Tests
            verbose: true

  build:
    runs-on: ubuntu-latest
    needs:
      - extract-branch
      - check-folders
      - unit-test
      - integration-test

    # Only run this job if the src/main/ or src/test/ folders have been modified. Also skip this job if the branch is "develop".
    if: ${{ needs.check-folders.outputs.run_build_job == 'true' && needs.extract-branch.outputs.branch != 'develop' }}
    steps:
      -   name: Check out the repo
          uses: actions/checkout@v3

      -   name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'adopt'

          # Skip testing in this command, as we already ran the tests in the previous jobs.
      -   name: Build with Maven
          run: mvn package -Dmaven.test.skip=true

      -   name: Run docker Compose
          run: docker-compose up --abort-on-container-exit